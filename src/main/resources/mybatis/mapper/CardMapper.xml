<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.mapper.CardMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.entity.Card">
    <id column="card_id" jdbcType="BIGINT" property="cardId" />
    <result column="player_id" jdbcType="BIGINT" property="playerId" />
    <result column="card_num" jdbcType="VARCHAR" property="cardNum" />
    <result column="bank" jdbcType="VARCHAR" property="bank" />
    <result column="full_name" jdbcType="VARCHAR" property="fullName" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    card_id, player_id, card_num, bank, full_name, create_date, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from p_card
    where card_id = #{cardId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from p_card
    where card_id = #{cardId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.entity.Card">
    insert into p_card (card_id, player_id, card_num, 
      bank, full_name, create_date, 
      update_date)
    values (#{cardId,jdbcType=BIGINT}, #{playerId,jdbcType=BIGINT}, #{cardNum,jdbcType=VARCHAR}, 
      #{bank,jdbcType=VARCHAR}, #{fullName,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.entity.Card">
    insert into p_card
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cardId != null">
        card_id,
      </if>
      <if test="playerId != null">
        player_id,
      </if>
      <if test="cardNum != null">
        card_num,
      </if>
      <if test="bank != null">
        bank,
      </if>
      <if test="fullName != null">
        full_name,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cardId != null">
        #{cardId,jdbcType=BIGINT},
      </if>
      <if test="playerId != null">
        #{playerId,jdbcType=BIGINT},
      </if>
      <if test="cardNum != null">
        #{cardNum,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="fullName != null">
        #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.entity.Card">
    update p_card
    <set>
      <if test="playerId != null">
        player_id = #{playerId,jdbcType=BIGINT},
      </if>
      <if test="cardNum != null">
        card_num = #{cardNum,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
        bank = #{bank,jdbcType=VARCHAR},
      </if>
      <if test="fullName != null">
        full_name = #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where card_id = #{cardId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.entity.Card">
    update p_card
    set player_id = #{playerId,jdbcType=BIGINT},
      card_num = #{cardNum,jdbcType=VARCHAR},
      bank = #{bank,jdbcType=VARCHAR},
      full_name = #{fullName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where card_id = #{cardId,jdbcType=BIGINT}
  </update>
</mapper>