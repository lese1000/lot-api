<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.mapper.CashRecordMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.entity.CashRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="player_id" jdbcType="BIGINT" property="playerId" />
    <result column="full_name" jdbcType="VARCHAR" property="fullName" />
    <result column="bank" jdbcType="VARCHAR" property="bank" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="cash_val" jdbcType="DOUBLE" property="cashVal" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="auditor" jdbcType="VARCHAR" property="auditor" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, player_id, full_name, bank, account, cash_val, create_date, update_date, auditor, 
    status, audit_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from s_cash_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from s_cash_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.entity.CashRecord">
    insert into s_cash_record (id, player_id, full_name, 
      bank, account, cash_val, 
      create_date, update_date, auditor, 
      status, audit_time)
    values (#{id,jdbcType=BIGINT}, #{playerId,jdbcType=BIGINT}, #{fullName,jdbcType=VARCHAR}, 
      #{bank,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{cashVal,jdbcType=DOUBLE}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{auditor,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{auditTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.entity.CashRecord">
    insert into s_cash_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="playerId != null">
        player_id,
      </if>
      <if test="fullName != null">
        full_name,
      </if>
      <if test="bank != null">
        bank,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="cashVal != null">
        cash_val,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="auditor != null">
        auditor,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="auditTime != null">
        audit_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="playerId != null">
        #{playerId,jdbcType=BIGINT},
      </if>
      <if test="fullName != null">
        #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="cashVal != null">
        #{cashVal,jdbcType=DOUBLE},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="auditor != null">
        #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.entity.CashRecord">
    update s_cash_record
    <set>
      <if test="playerId != null">
        player_id = #{playerId,jdbcType=BIGINT},
      </if>
      <if test="fullName != null">
        full_name = #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
        bank = #{bank,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="cashVal != null">
        cash_val = #{cashVal,jdbcType=DOUBLE},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="auditor != null">
        auditor = #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="auditTime != null">
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.entity.CashRecord">
    update s_cash_record
    set player_id = #{playerId,jdbcType=BIGINT},
      full_name = #{fullName,jdbcType=VARCHAR},
      bank = #{bank,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      cash_val = #{cashVal,jdbcType=DOUBLE},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      auditor = #{auditor,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      audit_time = #{auditTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>